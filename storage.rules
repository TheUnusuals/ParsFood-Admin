rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /providers/{providerId}/menu-items/{menuItemId}/pictures/{menuItemPicture} {
      allow get;
      allow create: if hasAnyRole(['admin', 'provider_admin'])
                    && sizeLessThanEqualsMB(5) && isImage() && menuItemPicture.size() <= 32;
      allow delete: if hasAnyRole(['admin', 'provider_admin']);
    }

    function sizeLessThanEqualsMB(mb) {
      return request.resource.size <= mb * 1024 * 1024;
    }

    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    function hasRole(role) {
      return isSignedIn() && request.auth.token.role == role;
    }

    function hasAnyRole(roles) {
      return isSignedIn() && request.auth.token.role in roles;
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}
